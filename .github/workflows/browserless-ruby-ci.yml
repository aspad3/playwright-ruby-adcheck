name: Run Browserless Script

on:
  schedule:
    - cron: '0 0 1 1 *' # Run at 00:00 on January 1st every year
  workflow_dispatch: # Can be manually triggered
  push:
    branches:
      - main # Run on push to the main branch (or specify other branches as needed)
  pull_request:
    branches:
      - main # Run on pull request to the main branch (or specify other branches as needed)

jobs:
  run-browserless:
    runs-on: ubuntu-latest
    
    steps:
      # Checkout the repository
      - name: Checkout repo
        uses: actions/checkout@v4
        
      # Check if DOMAIN_URL is set and fail if not
      - name: Fail if DOMAIN_URL is missing
        run: |
          if [ -z "${{ secrets.DOMAIN_URL }}" ]; then
            echo "DOMAIN_URL is not set or is empty!"
            exit 1
          fi
          echo "DOMAIN_URL is set."
        
      # Check environment variables first (debugging purpose)
      - name: Check Environment Variables
        run: |
          echo "---- Environment Check ----"
          echo "TARGET_URL: ${{ secrets.TARGET_URL }}"
          echo "BROWSERLESS_API_TOKEN: ${{ secrets.BROWSERLESS_API_TOKEN }}"
          echo "USER_AGENT: ${{ secrets.USER_AGENT }}"
          echo "DOMAIN_URL: ${{ secrets.DOMAIN_URL }}"
          echo "---------------------------"
        
      # Set up Ruby environment
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.3
        
      # Cache Ruby gems to avoid re-installation every time (Updated to v3)
      - name: Cache Ruby gems
        uses: actions/cache@v3
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-ruby-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-ruby-
        
      # Install necessary dependencies (libcurl, build tools) only if not already cached
      - name: Install dependencies (libcurl, build tools)
        run: |
          sudo apt-get update
          sudo apt-get install -y libcurl4-openssl-dev build-essential
        
      # Install Ruby dependencies only if needed (uses cache from the previous step)
      - name: Install Ruby dependencies
        run: |
          gem install bundler
          bundle config set --local path 'vendor/bundle'
          bundle install --jobs 4 --retry 3 || bundle install --jobs 4 --retry 3
          gem install curb # Ensure curb is installed if your script depends on it
        
      # Create artifacts folder
      - name: Create artifacts folder
        run: mkdir -p artifacts
        
      # Run Browserless Ruby script
      - name: Run Browserless Ruby script
        env:
          DOMAIN_URL: ${{ secrets.DOMAIN_URL }}
          TARGET_URL: ${{ secrets.TARGET_URL }}
          BROWSERLESS_API_TOKEN: ${{ secrets.BROWSERLESS_API_TOKEN }}
          USER_AGENT: ${{ secrets.USER_AGENT }}
        run: |
          echo "DOMAIN_URL: $DOMAIN_URL"
          echo "TARGET_URL: $TARGET_URL"
          echo "BROWSERLESS_API_TOKEN: $BROWSERLESS_API_TOKEN"
          echo "USER_AGENT: $USER_AGENT"
          bundle exec ruby script/browserless_ad_check.rb
        
      # Upload artifacts (response.json)
      - name: Upload artifacts (response.json)
        uses: actions/upload-artifact@v4
        with:
          name: browserless-artifacts
          path: artifacts
